// Express backend for Naija Topup Hub const express = require("express"); const bodyParser = require("body-parser"); const cors = require("cors"); const axios = require("axios"); const app = express(); const PORT = process.env.PORT || 3000;

app.use(cors()); app.use(bodyParser.json());

// In-memory user and wallet store const users = []; const wallets = {};

const PAYSTACK_SECRET = "sk_live_fc03f39fe1713dd7d8752b31b1c239203e0c4395"; const VTPASS_USERNAME = "sandbox@vtpass.com"; const VTPASS_PASSWORD = "sandbox"; const VTPASS_BASE_URL = "https://sandbox.vtpass.com/api";

function generateRequestId() { const now = new Date(); const year = now.getFullYear(); const month = String(now.getMonth() + 1).padStart(2, "0"); const day = String(now.getDate()).padStart(2, "0"); const hour = String(now.getHours()).padStart(2, "0"); const min = String(now.getMinutes()).padStart(2, "0"); const rand = Math.random().toString(36).substring(2, 4).toUpperCase(); return ${year}${month}${day}${hour}${min}${rand}; }

// Registration app.post("/api/register", (req, res) => { const { phone, password } = req.body; if (users.find(u => u.phone === phone)) { return res.status(400).json({ error: "User already exists" }); } users.push({ phone, password }); wallets[phone] = 0; res.json({ message: "Registered" }); });

// Login app.post("/api/login", (req, res) => { const { phone, password } = req.body; const user = users.find(u => u.phone === phone && u.password === password); if (!user) return res.status(401).json({ error: "Invalid credentials" }); res.json({ message: "Logged in" }); });

// Wallet balance app.get("/api/wallet/:phone", (req, res) => { const phone = req.params.phone; const balance = wallets[phone] || 0; res.json({ balance }); });

// Fund wallet via Paystack (simulation only) app.post("/api/fund", async (req, res) => { const { phone, amount } = req.body; if (!wallets[phone]) wallets[phone] = 0; wallets[phone] += parseFloat(amount); res.json({ message: "Wallet funded", balance: wallets[phone] }); });

// Topup (Airtime/Data/TV) app.post("/api/topup", async (req, res) => { const { phone, serviceID, variation_code, amount, recipient } = req.body; const balance = wallets[phone] || 0; if (balance < amount) return res.status(400).json({ error: "Insufficient balance" });

const request_id = generateRequestId();

try { const response = await axios.post( ${VTPASS_BASE_URL}/pay, { request_id, serviceID, billersCode: recipient, variation_code, amount, phone, }, { auth: { username: VTPASS_USERNAME, password: VTPASS_PASSWORD } } );

wallets[phone] -= amount;
res.json({ message: "Topup successful", request_id, vtpass: response.data });

} catch (err) { res.status(500).json({ error: "Topup failed", details: err.message }); } });

// Admin dashboard data app.get("/api/admin", (req, res) => { const { email } = req.query; if (email !== "xavieremediong@gmail.com") return res.status(403).json({ error: "Unauthorized" }); res.json({ users, wallets }); });

app.listen(PORT, () => console.log(Server running on port ${PORT}));


